// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.TailscaleNative.Tailnet
{
    public static class GetNameServer
    {
        public static Task<GetNameServerResult> InvokeAsync(GetNameServerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNameServerResult>("tailscale-native:tailnet:getNameServer", args ?? new GetNameServerArgs(), options.WithDefaults());

        public static Output<GetNameServerResult> Invoke(GetNameServerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNameServerResult>("tailscale-native:tailnet:getNameServer", args ?? new GetNameServerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNameServerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// For paid plans, your domain is your tailnet. For solo plans, the tailnet is the email you signed up with. So `alice@gmail.com` has the tailnet `alice@gmail.com` since `@gmail.com` is a shared email host. Alternatively, you can specify the value "-" to refer to the default tailnet of the authenticated user making the API call.
        /// </summary>
        [Input("tailnet", required: true)]
        public string Tailnet { get; set; } = null!;

        public GetNameServerArgs()
        {
        }
        public static new GetNameServerArgs Empty => new GetNameServerArgs();
    }

    public sealed class GetNameServerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// For paid plans, your domain is your tailnet. For solo plans, the tailnet is the email you signed up with. So `alice@gmail.com` has the tailnet `alice@gmail.com` since `@gmail.com` is a shared email host. Alternatively, you can specify the value "-" to refer to the default tailnet of the authenticated user making the API call.
        /// </summary>
        [Input("tailnet", required: true)]
        public Input<string> Tailnet { get; set; } = null!;

        public GetNameServerInvokeArgs()
        {
        }
        public static new GetNameServerInvokeArgs Empty => new GetNameServerInvokeArgs();
    }


    [OutputType]
    public sealed class GetNameServerResult
    {
        public readonly Outputs.NameServers Items;

        [OutputConstructor]
        private GetNameServerResult(Outputs.NameServers items)
        {
            Items = items;
        }
    }
}
