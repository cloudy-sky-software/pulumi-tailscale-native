// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package device

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-tailscale-native/sdk/go/tailscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func GetDevice(ctx *pulumi.Context, args *GetDeviceArgs, opts ...pulumi.InvokeOption) (*GetDeviceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDeviceResult
	err := ctx.Invoke("tailscale-native:device:getDevice", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetDeviceArgs struct {
	Id string `pulumi:"id"`
}

type GetDeviceResult struct {
	Items Device `pulumi:"items"`
}

func GetDeviceOutput(ctx *pulumi.Context, args GetDeviceOutputArgs, opts ...pulumi.InvokeOption) GetDeviceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDeviceResult, error) {
			args := v.(GetDeviceArgs)
			r, err := GetDevice(ctx, &args, opts...)
			var s GetDeviceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDeviceResultOutput)
}

type GetDeviceOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetDeviceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceArgs)(nil)).Elem()
}

type GetDeviceResultOutput struct{ *pulumi.OutputState }

func (GetDeviceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceResult)(nil)).Elem()
}

func (o GetDeviceResultOutput) ToGetDeviceResultOutput() GetDeviceResultOutput {
	return o
}

func (o GetDeviceResultOutput) ToGetDeviceResultOutputWithContext(ctx context.Context) GetDeviceResultOutput {
	return o
}

func (o GetDeviceResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeviceResult] {
	return pulumix.Output[GetDeviceResult]{
		OutputState: o.OutputState,
	}
}

func (o GetDeviceResultOutput) Items() DeviceOutput {
	return o.ApplyT(func(v GetDeviceResult) Device { return v.Items }).(DeviceOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDeviceResultOutput{})
}
