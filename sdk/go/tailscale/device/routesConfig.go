// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package device

import (
	"context"
	"reflect"

	"errors"
	"github.com/cloudy-sky-software/pulumi-tailscale-native/sdk/go/tailscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RoutesConfig struct {
	pulumi.CustomResourceState

	AdvertisedRoutes pulumi.StringArrayOutput `pulumi:"advertisedRoutes"`
	EnabledRoutes    pulumi.StringArrayOutput `pulumi:"enabledRoutes"`
	Routes           pulumi.StringArrayOutput `pulumi:"routes"`
}

// NewRoutesConfig registers a new resource with the given unique name, arguments, and options.
func NewRoutesConfig(ctx *pulumi.Context,
	name string, args *RoutesConfigArgs, opts ...pulumi.ResourceOption) (*RoutesConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Routes == nil {
		return nil, errors.New("invalid value for required argument 'Routes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RoutesConfig
	err := ctx.RegisterResource("tailscale-native:device:RoutesConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoutesConfig gets an existing RoutesConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoutesConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RoutesConfigState, opts ...pulumi.ResourceOption) (*RoutesConfig, error) {
	var resource RoutesConfig
	err := ctx.ReadResource("tailscale-native:device:RoutesConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RoutesConfig resources.
type routesConfigState struct {
}

type RoutesConfigState struct {
}

func (RoutesConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*routesConfigState)(nil)).Elem()
}

type routesConfigArgs struct {
	Id     *string  `pulumi:"id"`
	Routes []string `pulumi:"routes"`
}

// The set of arguments for constructing a RoutesConfig resource.
type RoutesConfigArgs struct {
	Id     pulumi.StringPtrInput
	Routes pulumi.StringArrayInput
}

func (RoutesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routesConfigArgs)(nil)).Elem()
}

type RoutesConfigInput interface {
	pulumi.Input

	ToRoutesConfigOutput() RoutesConfigOutput
	ToRoutesConfigOutputWithContext(ctx context.Context) RoutesConfigOutput
}

func (*RoutesConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesConfig)(nil)).Elem()
}

func (i *RoutesConfig) ToRoutesConfigOutput() RoutesConfigOutput {
	return i.ToRoutesConfigOutputWithContext(context.Background())
}

func (i *RoutesConfig) ToRoutesConfigOutputWithContext(ctx context.Context) RoutesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutesConfigOutput)
}

type RoutesConfigOutput struct{ *pulumi.OutputState }

func (RoutesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutesConfig)(nil)).Elem()
}

func (o RoutesConfigOutput) ToRoutesConfigOutput() RoutesConfigOutput {
	return o
}

func (o RoutesConfigOutput) ToRoutesConfigOutputWithContext(ctx context.Context) RoutesConfigOutput {
	return o
}

func (o RoutesConfigOutput) AdvertisedRoutes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RoutesConfig) pulumi.StringArrayOutput { return v.AdvertisedRoutes }).(pulumi.StringArrayOutput)
}

func (o RoutesConfigOutput) EnabledRoutes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RoutesConfig) pulumi.StringArrayOutput { return v.EnabledRoutes }).(pulumi.StringArrayOutput)
}

func (o RoutesConfigOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RoutesConfig) pulumi.StringArrayOutput { return v.Routes }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RoutesConfigInput)(nil)).Elem(), &RoutesConfig{})
	pulumi.RegisterOutputType(RoutesConfigOutput{})
}
