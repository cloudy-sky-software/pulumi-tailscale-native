// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package device

import (
	"context"
	"reflect"

	"errors"
	"github.com/cloudy-sky-software/pulumi-tailscale-native/sdk/go/tailscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AuthorizeDevice struct {
	pulumi.CustomResourceState

	Authorized pulumi.BoolOutput `pulumi:"authorized"`
}

// NewAuthorizeDevice registers a new resource with the given unique name, arguments, and options.
func NewAuthorizeDevice(ctx *pulumi.Context,
	name string, args *AuthorizeDeviceArgs, opts ...pulumi.ResourceOption) (*AuthorizeDevice, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Authorized == nil {
		return nil, errors.New("invalid value for required argument 'Authorized'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AuthorizeDevice
	err := ctx.RegisterResource("tailscale-native:device:AuthorizeDevice", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthorizeDevice gets an existing AuthorizeDevice resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthorizeDevice(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthorizeDeviceState, opts ...pulumi.ResourceOption) (*AuthorizeDevice, error) {
	var resource AuthorizeDevice
	err := ctx.ReadResource("tailscale-native:device:AuthorizeDevice", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthorizeDevice resources.
type authorizeDeviceState struct {
}

type AuthorizeDeviceState struct {
}

func (AuthorizeDeviceState) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizeDeviceState)(nil)).Elem()
}

type authorizeDeviceArgs struct {
	Authorized bool    `pulumi:"authorized"`
	Id         *string `pulumi:"id"`
}

// The set of arguments for constructing a AuthorizeDevice resource.
type AuthorizeDeviceArgs struct {
	Authorized pulumi.BoolInput
	Id         pulumi.StringPtrInput
}

func (AuthorizeDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizeDeviceArgs)(nil)).Elem()
}

type AuthorizeDeviceInput interface {
	pulumi.Input

	ToAuthorizeDeviceOutput() AuthorizeDeviceOutput
	ToAuthorizeDeviceOutputWithContext(ctx context.Context) AuthorizeDeviceOutput
}

func (*AuthorizeDevice) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizeDevice)(nil)).Elem()
}

func (i *AuthorizeDevice) ToAuthorizeDeviceOutput() AuthorizeDeviceOutput {
	return i.ToAuthorizeDeviceOutputWithContext(context.Background())
}

func (i *AuthorizeDevice) ToAuthorizeDeviceOutputWithContext(ctx context.Context) AuthorizeDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizeDeviceOutput)
}

type AuthorizeDeviceOutput struct{ *pulumi.OutputState }

func (AuthorizeDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizeDevice)(nil)).Elem()
}

func (o AuthorizeDeviceOutput) ToAuthorizeDeviceOutput() AuthorizeDeviceOutput {
	return o
}

func (o AuthorizeDeviceOutput) ToAuthorizeDeviceOutputWithContext(ctx context.Context) AuthorizeDeviceOutput {
	return o
}

func (o AuthorizeDeviceOutput) Authorized() pulumi.BoolOutput {
	return o.ApplyT(func(v *AuthorizeDevice) pulumi.BoolOutput { return v.Authorized }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizeDeviceInput)(nil)).Elem(), &AuthorizeDevice{})
	pulumi.RegisterOutputType(AuthorizeDeviceOutput{})
}
