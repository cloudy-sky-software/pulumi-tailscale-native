// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tailnet

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-tailscale-native/sdk/go/tailscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDNSPreference(ctx *pulumi.Context, args *GetDNSPreferenceArgs, opts ...pulumi.InvokeOption) (*GetDNSPreferenceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDNSPreferenceResult
	err := ctx.Invoke("tailscale-native:tailnet:getDNSPreference", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetDNSPreferenceArgs struct {
	// For paid plans, your domain is your tailnet. For solo plans, the tailnet is the email you signed up with. So `alice@gmail.com` has the tailnet `alice@gmail.com` since `@gmail.com` is a shared email host. Alternatively, you can specify the value "-" to refer to the default tailnet of the authenticated user making the API call.
	Tailnet string `pulumi:"tailnet"`
}

type GetDNSPreferenceResult struct {
	Items NameServersPreference `pulumi:"items"`
}

func GetDNSPreferenceOutput(ctx *pulumi.Context, args GetDNSPreferenceOutputArgs, opts ...pulumi.InvokeOption) GetDNSPreferenceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDNSPreferenceResult, error) {
			args := v.(GetDNSPreferenceArgs)
			r, err := GetDNSPreference(ctx, &args, opts...)
			var s GetDNSPreferenceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDNSPreferenceResultOutput)
}

type GetDNSPreferenceOutputArgs struct {
	// For paid plans, your domain is your tailnet. For solo plans, the tailnet is the email you signed up with. So `alice@gmail.com` has the tailnet `alice@gmail.com` since `@gmail.com` is a shared email host. Alternatively, you can specify the value "-" to refer to the default tailnet of the authenticated user making the API call.
	Tailnet pulumi.StringInput `pulumi:"tailnet"`
}

func (GetDNSPreferenceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDNSPreferenceArgs)(nil)).Elem()
}

type GetDNSPreferenceResultOutput struct{ *pulumi.OutputState }

func (GetDNSPreferenceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDNSPreferenceResult)(nil)).Elem()
}

func (o GetDNSPreferenceResultOutput) ToGetDNSPreferenceResultOutput() GetDNSPreferenceResultOutput {
	return o
}

func (o GetDNSPreferenceResultOutput) ToGetDNSPreferenceResultOutputWithContext(ctx context.Context) GetDNSPreferenceResultOutput {
	return o
}

func (o GetDNSPreferenceResultOutput) Items() NameServersPreferenceOutput {
	return o.ApplyT(func(v GetDNSPreferenceResult) NameServersPreference { return v.Items }).(NameServersPreferenceOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDNSPreferenceResultOutput{})
}
