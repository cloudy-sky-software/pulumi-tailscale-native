// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tailnet

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-tailscale-native/sdk/go/tailscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetNameServer(ctx *pulumi.Context, args *GetNameServerArgs, opts ...pulumi.InvokeOption) (*GetNameServerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNameServerResult
	err := ctx.Invoke("tailscale-native:tailnet:getNameServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetNameServerArgs struct {
	// For paid plans, your domain is your tailnet. For solo plans, the tailnet is the email you signed up with. So `alice@gmail.com` has the tailnet `alice@gmail.com` since `@gmail.com` is a shared email host. Alternatively, you can specify the value "-" to refer to the default tailnet of the authenticated user making the API call.
	Tailnet string `pulumi:"tailnet"`
}

type GetNameServerResult struct {
	Items NameServersType `pulumi:"items"`
}

func GetNameServerOutput(ctx *pulumi.Context, args GetNameServerOutputArgs, opts ...pulumi.InvokeOption) GetNameServerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNameServerResult, error) {
			args := v.(GetNameServerArgs)
			r, err := GetNameServer(ctx, &args, opts...)
			var s GetNameServerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNameServerResultOutput)
}

type GetNameServerOutputArgs struct {
	// For paid plans, your domain is your tailnet. For solo plans, the tailnet is the email you signed up with. So `alice@gmail.com` has the tailnet `alice@gmail.com` since `@gmail.com` is a shared email host. Alternatively, you can specify the value "-" to refer to the default tailnet of the authenticated user making the API call.
	Tailnet pulumi.StringInput `pulumi:"tailnet"`
}

func (GetNameServerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNameServerArgs)(nil)).Elem()
}

type GetNameServerResultOutput struct{ *pulumi.OutputState }

func (GetNameServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNameServerResult)(nil)).Elem()
}

func (o GetNameServerResultOutput) ToGetNameServerResultOutput() GetNameServerResultOutput {
	return o
}

func (o GetNameServerResultOutput) ToGetNameServerResultOutputWithContext(ctx context.Context) GetNameServerResultOutput {
	return o
}

func (o GetNameServerResultOutput) Items() NameServersTypeOutput {
	return o.ApplyT(func(v GetNameServerResult) NameServersType { return v.Items }).(NameServersTypeOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNameServerResultOutput{})
}
