// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tailnet

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-tailscale-native/sdk/go/tailscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListKeys(ctx *pulumi.Context, args *ListKeysArgs, opts ...pulumi.InvokeOption) (*ListKeysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListKeysResult
	err := ctx.Invoke("tailscale-native:tailnet:listKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListKeysArgs struct {
	// For paid plans, your domain is your tailnet. For solo plans, the tailnet is the email you signed up with. So `alice@gmail.com` has the tailnet `alice@gmail.com` since `@gmail.com` is a shared email host. Alternatively, you can specify the value "-" to refer to the default tailnet of the authenticated user making the API call.
	Tailnet string `pulumi:"tailnet"`
}

type ListKeysResult struct {
	Items []AuthKey `pulumi:"items"`
}

func ListKeysOutput(ctx *pulumi.Context, args ListKeysOutputArgs, opts ...pulumi.InvokeOption) ListKeysResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListKeysResultOutput, error) {
			args := v.(ListKeysArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("tailscale-native:tailnet:listKeys", args, ListKeysResultOutput{}, options).(ListKeysResultOutput), nil
		}).(ListKeysResultOutput)
}

type ListKeysOutputArgs struct {
	// For paid plans, your domain is your tailnet. For solo plans, the tailnet is the email you signed up with. So `alice@gmail.com` has the tailnet `alice@gmail.com` since `@gmail.com` is a shared email host. Alternatively, you can specify the value "-" to refer to the default tailnet of the authenticated user making the API call.
	Tailnet pulumi.StringInput `pulumi:"tailnet"`
}

func (ListKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListKeysArgs)(nil)).Elem()
}

type ListKeysResultOutput struct{ *pulumi.OutputState }

func (ListKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListKeysResult)(nil)).Elem()
}

func (o ListKeysResultOutput) ToListKeysResultOutput() ListKeysResultOutput {
	return o
}

func (o ListKeysResultOutput) ToListKeysResultOutputWithContext(ctx context.Context) ListKeysResultOutput {
	return o
}

func (o ListKeysResultOutput) Items() AuthKeyArrayOutput {
	return o.ApplyT(func(v ListKeysResult) []AuthKey { return v.Items }).(AuthKeyArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListKeysResultOutput{})
}
