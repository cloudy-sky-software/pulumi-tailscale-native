// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tailnet

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupNameServers(ctx *pulumi.Context, args *LookupNameServersArgs, opts ...pulumi.InvokeOption) (*LookupNameServersResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupNameServersResult
	err := ctx.Invoke("tailscale-native:tailnet:getNameServers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupNameServersArgs struct {
	Tailnet string `pulumi:"tailnet"`
}

type LookupNameServersResult struct {
	Items NameServersType `pulumi:"items"`
}

func LookupNameServersOutput(ctx *pulumi.Context, args LookupNameServersOutputArgs, opts ...pulumi.InvokeOption) LookupNameServersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNameServersResult, error) {
			args := v.(LookupNameServersArgs)
			r, err := LookupNameServers(ctx, &args, opts...)
			var s LookupNameServersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNameServersResultOutput)
}

type LookupNameServersOutputArgs struct {
	Tailnet pulumi.StringInput `pulumi:"tailnet"`
}

func (LookupNameServersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNameServersArgs)(nil)).Elem()
}

type LookupNameServersResultOutput struct{ *pulumi.OutputState }

func (LookupNameServersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNameServersResult)(nil)).Elem()
}

func (o LookupNameServersResultOutput) ToLookupNameServersResultOutput() LookupNameServersResultOutput {
	return o
}

func (o LookupNameServersResultOutput) ToLookupNameServersResultOutputWithContext(ctx context.Context) LookupNameServersResultOutput {
	return o
}

func (o LookupNameServersResultOutput) Items() NameServersTypeOutput {
	return o.ApplyT(func(v LookupNameServersResult) NameServersType { return v.Items }).(NameServersTypeOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNameServersResultOutput{})
}
