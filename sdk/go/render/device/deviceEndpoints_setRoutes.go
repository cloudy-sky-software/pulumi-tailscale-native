// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package device

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeviceEndpoints_setRoutes struct {
	pulumi.CustomResourceState

	Routes pulumi.StringArrayOutput `pulumi:"routes"`
}

// NewDeviceEndpoints_setRoutes registers a new resource with the given unique name, arguments, and options.
func NewDeviceEndpoints_setRoutes(ctx *pulumi.Context,
	name string, args *DeviceEndpoints_setRoutesArgs, opts ...pulumi.ResourceOption) (*DeviceEndpoints_setRoutes, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Routes == nil {
		return nil, errors.New("invalid value for required argument 'Routes'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DeviceEndpoints_setRoutes
	err := ctx.RegisterResource("tailscale:device:DeviceEndpoints_setRoutes", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeviceEndpoints_setRoutes gets an existing DeviceEndpoints_setRoutes resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeviceEndpoints_setRoutes(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeviceEndpoints_setRoutesState, opts ...pulumi.ResourceOption) (*DeviceEndpoints_setRoutes, error) {
	var resource DeviceEndpoints_setRoutes
	err := ctx.ReadResource("tailscale:device:DeviceEndpoints_setRoutes", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeviceEndpoints_setRoutes resources.
type deviceEndpoints_setRoutesState struct {
}

type DeviceEndpoints_setRoutesState struct {
}

func (DeviceEndpoints_setRoutesState) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceEndpoints_setRoutesState)(nil)).Elem()
}

type deviceEndpoints_setRoutesArgs struct {
	Id     *string  `pulumi:"id"`
	Routes []string `pulumi:"routes"`
}

// The set of arguments for constructing a DeviceEndpoints_setRoutes resource.
type DeviceEndpoints_setRoutesArgs struct {
	Id     pulumi.StringPtrInput
	Routes pulumi.StringArrayInput
}

func (DeviceEndpoints_setRoutesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceEndpoints_setRoutesArgs)(nil)).Elem()
}

type DeviceEndpoints_setRoutesInput interface {
	pulumi.Input

	ToDeviceEndpoints_setRoutesOutput() DeviceEndpoints_setRoutesOutput
	ToDeviceEndpoints_setRoutesOutputWithContext(ctx context.Context) DeviceEndpoints_setRoutesOutput
}

func (*DeviceEndpoints_setRoutes) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceEndpoints_setRoutes)(nil)).Elem()
}

func (i *DeviceEndpoints_setRoutes) ToDeviceEndpoints_setRoutesOutput() DeviceEndpoints_setRoutesOutput {
	return i.ToDeviceEndpoints_setRoutesOutputWithContext(context.Background())
}

func (i *DeviceEndpoints_setRoutes) ToDeviceEndpoints_setRoutesOutputWithContext(ctx context.Context) DeviceEndpoints_setRoutesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceEndpoints_setRoutesOutput)
}

type DeviceEndpoints_setRoutesOutput struct{ *pulumi.OutputState }

func (DeviceEndpoints_setRoutesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceEndpoints_setRoutes)(nil)).Elem()
}

func (o DeviceEndpoints_setRoutesOutput) ToDeviceEndpoints_setRoutesOutput() DeviceEndpoints_setRoutesOutput {
	return o
}

func (o DeviceEndpoints_setRoutesOutput) ToDeviceEndpoints_setRoutesOutputWithContext(ctx context.Context) DeviceEndpoints_setRoutesOutput {
	return o
}

func (o DeviceEndpoints_setRoutesOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeviceEndpoints_setRoutes) pulumi.StringArrayOutput { return v.Routes }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceEndpoints_setRoutesInput)(nil)).Elem(), &DeviceEndpoints_setRoutes{})
	pulumi.RegisterOutputType(DeviceEndpoints_setRoutesOutput{})
}
