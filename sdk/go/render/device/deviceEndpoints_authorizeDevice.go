// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package device

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeviceEndpoints_authorizeDevice struct {
	pulumi.CustomResourceState

	Authorized pulumi.BoolOutput `pulumi:"authorized"`
}

// NewDeviceEndpoints_authorizeDevice registers a new resource with the given unique name, arguments, and options.
func NewDeviceEndpoints_authorizeDevice(ctx *pulumi.Context,
	name string, args *DeviceEndpoints_authorizeDeviceArgs, opts ...pulumi.ResourceOption) (*DeviceEndpoints_authorizeDevice, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Authorized == nil {
		return nil, errors.New("invalid value for required argument 'Authorized'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DeviceEndpoints_authorizeDevice
	err := ctx.RegisterResource("tailscale:device:DeviceEndpoints_authorizeDevice", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeviceEndpoints_authorizeDevice gets an existing DeviceEndpoints_authorizeDevice resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeviceEndpoints_authorizeDevice(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeviceEndpoints_authorizeDeviceState, opts ...pulumi.ResourceOption) (*DeviceEndpoints_authorizeDevice, error) {
	var resource DeviceEndpoints_authorizeDevice
	err := ctx.ReadResource("tailscale:device:DeviceEndpoints_authorizeDevice", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeviceEndpoints_authorizeDevice resources.
type deviceEndpoints_authorizeDeviceState struct {
}

type DeviceEndpoints_authorizeDeviceState struct {
}

func (DeviceEndpoints_authorizeDeviceState) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceEndpoints_authorizeDeviceState)(nil)).Elem()
}

type deviceEndpoints_authorizeDeviceArgs struct {
	Authorized bool    `pulumi:"authorized"`
	Id         *string `pulumi:"id"`
}

// The set of arguments for constructing a DeviceEndpoints_authorizeDevice resource.
type DeviceEndpoints_authorizeDeviceArgs struct {
	Authorized pulumi.BoolInput
	Id         pulumi.StringPtrInput
}

func (DeviceEndpoints_authorizeDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceEndpoints_authorizeDeviceArgs)(nil)).Elem()
}

type DeviceEndpoints_authorizeDeviceInput interface {
	pulumi.Input

	ToDeviceEndpoints_authorizeDeviceOutput() DeviceEndpoints_authorizeDeviceOutput
	ToDeviceEndpoints_authorizeDeviceOutputWithContext(ctx context.Context) DeviceEndpoints_authorizeDeviceOutput
}

func (*DeviceEndpoints_authorizeDevice) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceEndpoints_authorizeDevice)(nil)).Elem()
}

func (i *DeviceEndpoints_authorizeDevice) ToDeviceEndpoints_authorizeDeviceOutput() DeviceEndpoints_authorizeDeviceOutput {
	return i.ToDeviceEndpoints_authorizeDeviceOutputWithContext(context.Background())
}

func (i *DeviceEndpoints_authorizeDevice) ToDeviceEndpoints_authorizeDeviceOutputWithContext(ctx context.Context) DeviceEndpoints_authorizeDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceEndpoints_authorizeDeviceOutput)
}

type DeviceEndpoints_authorizeDeviceOutput struct{ *pulumi.OutputState }

func (DeviceEndpoints_authorizeDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceEndpoints_authorizeDevice)(nil)).Elem()
}

func (o DeviceEndpoints_authorizeDeviceOutput) ToDeviceEndpoints_authorizeDeviceOutput() DeviceEndpoints_authorizeDeviceOutput {
	return o
}

func (o DeviceEndpoints_authorizeDeviceOutput) ToDeviceEndpoints_authorizeDeviceOutputWithContext(ctx context.Context) DeviceEndpoints_authorizeDeviceOutput {
	return o
}

func (o DeviceEndpoints_authorizeDeviceOutput) Authorized() pulumi.BoolOutput {
	return o.ApplyT(func(v *DeviceEndpoints_authorizeDevice) pulumi.BoolOutput { return v.Authorized }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceEndpoints_authorizeDeviceInput)(nil)).Elem(), &DeviceEndpoints_authorizeDevice{})
	pulumi.RegisterOutputType(DeviceEndpoints_authorizeDeviceOutput{})
}
