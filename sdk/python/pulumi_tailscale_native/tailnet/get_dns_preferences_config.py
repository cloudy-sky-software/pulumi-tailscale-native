# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetDNSPreferencesConfigResult',
    'AwaitableGetDNSPreferencesConfigResult',
    'get_dns_preferences_config',
    'get_dns_preferences_config_output',
]

@pulumi.output_type
class GetDNSPreferencesConfigResult:
    def __init__(__self__, magic_dns=None):
        if magic_dns and not isinstance(magic_dns, bool):
            raise TypeError("Expected argument 'magic_dns' to be a bool")
        pulumi.set(__self__, "magic_dns", magic_dns)

    @_builtins.property
    @pulumi.getter(name="magicDNS")
    def magic_dns(self) -> _builtins.bool:
        return pulumi.get(self, "magic_dns")


class AwaitableGetDNSPreferencesConfigResult(GetDNSPreferencesConfigResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDNSPreferencesConfigResult(
            magic_dns=self.magic_dns)


def get_dns_preferences_config(tailnet: Optional[_builtins.str] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDNSPreferencesConfigResult:
    """
    Use this data source to access information about an existing resource.

    :param _builtins.str tailnet: For paid plans, your domain is your tailnet. For solo plans, the tailnet is the email you signed up with. So `alice@gmail.com` has the tailnet `alice@gmail.com` since `@gmail.com` is a shared email host. Alternatively, you can specify the value "-" to refer to the default tailnet of the authenticated user making the API call.
    """
    __args__ = dict()
    __args__['tailnet'] = tailnet
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tailscale-native:tailnet:getDNSPreferencesConfig', __args__, opts=opts, typ=GetDNSPreferencesConfigResult).value

    return AwaitableGetDNSPreferencesConfigResult(
        magic_dns=pulumi.get(__ret__, 'magic_dns'))
def get_dns_preferences_config_output(tailnet: Optional[pulumi.Input[_builtins.str]] = None,
                                      opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDNSPreferencesConfigResult]:
    """
    Use this data source to access information about an existing resource.

    :param _builtins.str tailnet: For paid plans, your domain is your tailnet. For solo plans, the tailnet is the email you signed up with. So `alice@gmail.com` has the tailnet `alice@gmail.com` since `@gmail.com` is a shared email host. Alternatively, you can specify the value "-" to refer to the default tailnet of the authenticated user making the API call.
    """
    __args__ = dict()
    __args__['tailnet'] = tailnet
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('tailscale-native:tailnet:getDNSPreferencesConfig', __args__, opts=opts, typ=GetDNSPreferencesConfigResult)
    return __ret__.apply(lambda __response__: GetDNSPreferencesConfigResult(
        magic_dns=pulumi.get(__response__, 'magic_dns')))
