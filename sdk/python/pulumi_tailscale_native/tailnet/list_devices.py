# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload, Awaitable
from .. import _utilities
from . import outputs

__all__ = [
    'ListDevicesProperties',
    'AwaitableListDevicesProperties',
    'list_devices',
    'list_devices_output',
]

@pulumi.output_type
class ListDevicesProperties:
    def __init__(__self__, devices=None):
        if devices and not isinstance(devices, list):
            raise TypeError("Expected argument 'devices' to be a list")
        pulumi.set(__self__, "devices", devices)

    @property
    @pulumi.getter
    def devices(self) -> Sequence['outputs.Device']:
        return pulumi.get(self, "devices")


class AwaitableListDevicesProperties(ListDevicesProperties):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return ListDevicesProperties(
            devices=self.devices)


def list_devices(tailnet: Optional[str] = None,
                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableListDevicesProperties:
    """
    Use this data source to access information about an existing resource.

    :param str tailnet: For paid plans, your domain is your tailnet. For solo plans, the tailnet is the email you signed up with. So `alice@gmail.com` has the tailnet `alice@gmail.com` since `@gmail.com` is a shared email host. Alternatively, you can specify the value "-" to refer to the default tailnet of the authenticated user making the API call.
    """
    __args__ = dict()
    __args__['tailnet'] = tailnet
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tailscale-native:tailnet:listDevices', __args__, opts=opts, typ=ListDevicesProperties).value

    return AwaitableListDevicesProperties(
        devices=pulumi.get(__ret__, 'devices'))


@_utilities.lift_output_func(list_devices)
def list_devices_output(tailnet: Optional[pulumi.Input[str]] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[ListDevicesProperties]:
    """
    Use this data source to access information about an existing resource.

    :param str tailnet: For paid plans, your domain is your tailnet. For solo plans, the tailnet is the email you signed up with. So `alice@gmail.com` has the tailnet `alice@gmail.com` since `@gmail.com` is a shared email host. Alternatively, you can specify the value "-" to refer to the default tailnet of the authenticated user making the API call.
    """
    ...
