// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AclArgs } from "./acl";
export type Acl = import("./acl").Acl;
export const Acl: typeof import("./acl").Acl = null as any;
utilities.lazyLoad(exports, ["Acl"], () => require("./acl"));

export { DNSPreferencesArgs } from "./dnspreferences";
export type DNSPreferences = import("./dnspreferences").DNSPreferences;
export const DNSPreferences: typeof import("./dnspreferences").DNSPreferences = null as any;
utilities.lazyLoad(exports, ["DNSPreferences"], () => require("./dnspreferences"));

export { GetAclArgs, GetAclResult, GetAclOutputArgs } from "./getAcl";
export const getAcl: typeof import("./getAcl").getAcl = null as any;
export const getAclOutput: typeof import("./getAcl").getAclOutput = null as any;
utilities.lazyLoad(exports, ["getAcl","getAclOutput"], () => require("./getAcl"));

export { GetDNSPreferencesArgs, GetDNSPreferencesResult, GetDNSPreferencesOutputArgs } from "./getDNSPreferences";
export const getDNSPreferences: typeof import("./getDNSPreferences").getDNSPreferences = null as any;
export const getDNSPreferencesOutput: typeof import("./getDNSPreferences").getDNSPreferencesOutput = null as any;
utilities.lazyLoad(exports, ["getDNSPreferences","getDNSPreferencesOutput"], () => require("./getDNSPreferences"));

export { GetKeyArgs, GetKeyResult, GetKeyOutputArgs } from "./getKey";
export const getKey: typeof import("./getKey").getKey = null as any;
export const getKeyOutput: typeof import("./getKey").getKeyOutput = null as any;
utilities.lazyLoad(exports, ["getKey","getKeyOutput"], () => require("./getKey"));

export { GetNameServersArgs, GetNameServersResult, GetNameServersOutputArgs } from "./getNameServers";
export const getNameServers: typeof import("./getNameServers").getNameServers = null as any;
export const getNameServersOutput: typeof import("./getNameServers").getNameServersOutput = null as any;
utilities.lazyLoad(exports, ["getNameServers","getNameServersOutput"], () => require("./getNameServers"));

export { ListDevicesArgs, ListDevicesResult, ListDevicesOutputArgs } from "./listDevices";
export const listDevices: typeof import("./listDevices").listDevices = null as any;
export const listDevicesOutput: typeof import("./listDevices").listDevicesOutput = null as any;
utilities.lazyLoad(exports, ["listDevices","listDevicesOutput"], () => require("./listDevices"));

export { ListKeysArgs, ListKeysResult, ListKeysOutputArgs } from "./listKeys";
export const listKeys: typeof import("./listKeys").listKeys = null as any;
export const listKeysOutput: typeof import("./listKeys").listKeysOutput = null as any;
utilities.lazyLoad(exports, ["listKeys","listKeysOutput"], () => require("./listKeys"));

export { ListSearchPathsArgs, ListSearchPathsResult, ListSearchPathsOutputArgs } from "./listSearchPaths";
export const listSearchPaths: typeof import("./listSearchPaths").listSearchPaths = null as any;
export const listSearchPathsOutput: typeof import("./listSearchPaths").listSearchPathsOutput = null as any;
utilities.lazyLoad(exports, ["listSearchPaths","listSearchPathsOutput"], () => require("./listSearchPaths"));

export { NameServersArgs } from "./nameServers";
export type NameServers = import("./nameServers").NameServers;
export const NameServers: typeof import("./nameServers").NameServers = null as any;
utilities.lazyLoad(exports, ["NameServers"], () => require("./nameServers"));

export { TailnetEndpoints_replaceSearchPathsArgs } from "./tailnetEndpoints_replaceSearchPaths";
export type TailnetEndpoints_replaceSearchPaths = import("./tailnetEndpoints_replaceSearchPaths").TailnetEndpoints_replaceSearchPaths;
export const TailnetEndpoints_replaceSearchPaths: typeof import("./tailnetEndpoints_replaceSearchPaths").TailnetEndpoints_replaceSearchPaths = null as any;
utilities.lazyLoad(exports, ["TailnetEndpoints_replaceSearchPaths"], () => require("./tailnetEndpoints_replaceSearchPaths"));


// Export enums:
export * from "../types/enums/tailnet";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "tailscale:tailnet:Acl":
                return new Acl(name, <any>undefined, { urn })
            case "tailscale:tailnet:DNSPreferences":
                return new DNSPreferences(name, <any>undefined, { urn })
            case "tailscale:tailnet:NameServers":
                return new NameServers(name, <any>undefined, { urn })
            case "tailscale:tailnet:TailnetEndpoints_replaceSearchPaths":
                return new TailnetEndpoints_replaceSearchPaths(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tailscale", "tailnet", _module)
