// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AuthorizeDeviceArgs } from "./authorizeDevice";
export type AuthorizeDevice = import("./authorizeDevice").AuthorizeDevice;
export const AuthorizeDevice: typeof import("./authorizeDevice").AuthorizeDevice = null as any;
utilities.lazyLoad(exports, ["AuthorizeDevice"], () => require("./authorizeDevice"));

export { GetDeviceArgs, GetDeviceResult, GetDeviceOutputArgs } from "./getDevice";
export const getDevice: typeof import("./getDevice").getDevice = null as any;
export const getDeviceOutput: typeof import("./getDevice").getDeviceOutput = null as any;
utilities.lazyLoad(exports, ["getDevice","getDeviceOutput"], () => require("./getDevice"));

export { GetRoutesArgs, GetRoutesResult, GetRoutesOutputArgs } from "./getRoutes";
export const getRoutes: typeof import("./getRoutes").getRoutes = null as any;
export const getRoutesOutput: typeof import("./getRoutes").getRoutesOutput = null as any;
utilities.lazyLoad(exports, ["getRoutes","getRoutesOutput"], () => require("./getRoutes"));

export { KeyExpiryArgs } from "./keyExpiry";
export type KeyExpiry = import("./keyExpiry").KeyExpiry;
export const KeyExpiry: typeof import("./keyExpiry").KeyExpiry = null as any;
utilities.lazyLoad(exports, ["KeyExpiry"], () => require("./keyExpiry"));

export { RoutesArgs } from "./routes";
export type Routes = import("./routes").Routes;
export const Routes: typeof import("./routes").Routes = null as any;
utilities.lazyLoad(exports, ["Routes"], () => require("./routes"));

export { TagsArgs } from "./tags";
export type Tags = import("./tags").Tags;
export const Tags: typeof import("./tags").Tags = null as any;
utilities.lazyLoad(exports, ["Tags"], () => require("./tags"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "tailscale:device:KeyExpiry":
                return new KeyExpiry(name, <any>undefined, { urn })
            case "tailscale:device:Routes":
                return new Routes(name, <any>undefined, { urn })
            case "tailscale:device:Tags":
                return new Tags(name, <any>undefined, { urn })
            case "tailscale:device:authorizeDevice":
                return new AuthorizeDevice(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tailscale", "device", _module)
