// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";

export namespace device {
    export interface ClientConnectivity {
        clientSupports: outputs.device.ClientSupports;
        derp: string;
        endpoints: string;
        latency: any;
        mappingVariesByDestIP: boolean;
    }

    export interface ClientSupports {
        hairPinning: boolean;
        ipv6: boolean;
        pcp: boolean;
        pmp: boolean;
        udp: boolean;
        upnp: boolean;
    }

    export interface Device {
        addresses: string[];
        advertisedRoutes: string[];
        authorized: boolean;
        blocksIncomingConnections: boolean;
        clientConnectivity: outputs.device.ClientConnectivity;
        clientVersion: string;
        created: string;
        enabledRoutes: string[];
        expires: string;
        hostname: string;
        id: string;
        isExternal: boolean;
        keyExpiryDisabled: boolean;
        lastSeen: string;
        machineKey: string;
        name: string;
        nodeKey: string;
        os: string;
        updateAvailable: boolean;
        user: string;
    }

    export interface DeviceRoutes {
        advertisedRoutes: string[];
        enabledRoutes: string[];
    }

}

export namespace tailnet {
    export interface Acl {
        acls: outputs.tailnet.AclRule[];
        autoApprovers: any;
        groups: any;
        hosts: any;
        nodeAttrs: outputs.tailnet.NodeAttrs[];
        ssh: outputs.tailnet.SshRule[];
        tagOwners: any;
        tests: string;
    }

    export interface AclRule {
        action: enums.tailnet.AclRuleAction;
        ports: string[];
        users: string[];
    }

    export interface AuthKey {
        created?: string;
        expires: string;
        key: string;
    }

    export interface ClientConnectivity {
        clientSupports: outputs.tailnet.ClientSupports;
        derp: string;
        endpoints: string;
        latency: any;
        mappingVariesByDestIP: boolean;
    }

    export interface ClientSupports {
        hairPinning: boolean;
        ipv6: boolean;
        pcp: boolean;
        pmp: boolean;
        udp: boolean;
        upnp: boolean;
    }

    export interface CreateKey {
        ephemeral: boolean;
        preauthorized: boolean;
        reusable: boolean;
        tags: string[];
    }

    export interface Device {
        addresses: string[];
        advertisedRoutes: string[];
        authorized: boolean;
        blocksIncomingConnections: boolean;
        clientConnectivity: outputs.tailnet.ClientConnectivity;
        clientVersion: string;
        created: string;
        enabledRoutes: string[];
        expires: string;
        hostname: string;
        id: string;
        isExternal: boolean;
        keyExpiryDisabled: boolean;
        lastSeen: string;
        machineKey: string;
        name: string;
        nodeKey: string;
        os: string;
        updateAvailable: boolean;
        user: string;
    }

    export interface DeviceKeyCapabilities {
        create: outputs.tailnet.CreateKey;
    }

    export interface DnsSearchPaths {
        searchPaths: string[];
    }

    export interface KeyCapabilities {
        devices: outputs.tailnet.DeviceKeyCapabilities;
    }

    export interface NameServers {
        dns: string[];
        magicDNS: boolean;
    }

    export interface NameServersPreference {
        magicDNS: boolean;
    }

    export interface NodeAttrs {
        attr: string[];
        target: string[];
    }

    export interface SshRule {
        action: enums.tailnet.SshRuleAction;
        checkPeriod: string;
        dst: string[];
        src: string[];
        users: string[];
    }

}
