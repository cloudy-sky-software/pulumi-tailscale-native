openapi: 3.0.0
components:
  parameters:
    TailnetEndpoints.CommonParameters:
      description: For paid plans, your domain is your tailnet. For solo plans, the tailnet is the email you signed up with. So `alice@gmail.com` has the tailnet `alice@gmail.com` since `@gmail.com` is a shared email host. Alternatively, you can specify the value "-" to refer to the default tailnet of the authenticated user making the API call.
      in: path
      name: tailnet
      required: true
      schema:
        anyOf:
          - enum:
              - '-'
            type: string
          - type: string
  schemas:
    Acl:
      properties:
        acls:
          items:
            $ref: '#/components/schemas/AclRule'
          type: array
        autoApprovers:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        groups:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        hosts:
          additionalProperties:
            type: string
          type: object
        nodeAttrs:
          items:
            $ref: '#/components/schemas/NodeAttrs'
          type: array
        ssh:
          items:
            $ref: '#/components/schemas/SshRule'
          type: array
        tagOwners:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        tests:
          type: string
      required:
        - acls
        - autoApprovers
        - groups
        - hosts
        - nodeAttrs
        - ssh
        - tagOwners
        - tests
      type: object
    AclRule:
      properties:
        action:
          $ref: '#/components/schemas/AclRuleAction'
        ports:
          items:
            type: string
          type: array
        users:
          items:
            type: string
          type: array
      required:
        - action
        - ports
        - users
      type: object
    AclRuleAction:
      description: |-
        Tailscale ACL rules are "default deny".
        So the only possible value for an ACL
        rule is `accept`.
      enum:
        - accept
      type: string
    AuthKey:
      properties:
        created:
          readOnly: true
          type: string
        expires:
          readOnly: true
          type: string
        key:
          readOnly: true
          type: string
      required:
        - key
        - expires
      type: object
    AuthKeyCreate:
      properties:
        capabilities:
          $ref: '#/components/schemas/KeyCapabilities'
        expirySeconds:
          format: int64
          type: integer
      required:
        - capabilities
        - expirySeconds
      type: object
    ClientConnectivity:
      properties:
        clientSupports:
          $ref: '#/components/schemas/ClientSupports'
        derp:
          type: string
        endpoints:
          type: string
        latency:
          additionalProperties:
            $ref: '#/components/schemas/Latency'
          type: object
        mappingVariesByDestIP:
          type: boolean
      required:
        - endpoints
        - derp
        - mappingVariesByDestIP
        - latency
        - clientSupports
      type: object
    ClientSupports:
      properties:
        hairPinning:
          type: boolean
        ipv6:
          type: boolean
        pcp:
          type: boolean
        pmp:
          type: boolean
        udp:
          type: boolean
        upnp:
          type: boolean
      required:
        - hairPinning
        - ipv6
        - pcp
        - pmp
        - udp
        - upnp
      type: object
    CreateKey:
      properties:
        ephemeral:
          type: boolean
        preauthorized:
          type: boolean
        reusable:
          type: boolean
        tags:
          items:
            type: string
          type: array
      required:
        - reusable
        - ephemeral
        - preauthorized
        - tags
      type: object
    Device:
      properties:
        addresses:
          items:
            type: string
          type: array
        advertisedRoutes:
          items:
            type: string
          type: array
        authorized:
          type: boolean
        blocksIncomingConnections:
          type: boolean
        clientConnectivity:
          $ref: '#/components/schemas/ClientConnectivity'
        clientVersion:
          type: string
        created:
          type: string
        enabledRoutes:
          items:
            type: string
          type: array
        expires:
          type: string
        hostname:
          type: string
        id:
          type: string
        isExternal:
          type: boolean
        keyExpiryDisabled:
          type: boolean
        lastSeen:
          type: string
        machineKey:
          type: string
        name:
          type: string
        nodeKey:
          type: string
        os:
          type: string
        updateAvailable:
          type: boolean
        user:
          type: string
      required:
        - addresses
        - id
        - user
        - name
        - hostname
        - clientVersion
        - updateAvailable
        - os
        - created
        - lastSeen
        - keyExpiryDisabled
        - expires
        - authorized
        - isExternal
        - machineKey
        - nodeKey
        - blocksIncomingConnections
        - enabledRoutes
        - advertisedRoutes
        - clientConnectivity
      type: object
    DeviceKeyCapabilities:
      properties:
        create:
          $ref: '#/components/schemas/CreateKey'
      required:
        - create
      type: object
    DeviceRoutes:
      properties:
        advertisedRoutes:
          items:
            type: string
          type: array
        enabledRoutes:
          items:
            type: string
          type: array
      required:
        - advertisedRoutes
        - enabledRoutes
      type: object
    DnsSearchPaths:
      properties:
        searchPaths:
          items:
            type: string
          type: array
      required:
        - searchPaths
      type: object
    Error:
      properties:
        message:
          type: string
      required:
        - message
      type: object
    KeyCapabilities:
      properties:
        devices:
          $ref: '#/components/schemas/DeviceKeyCapabilities'
      required:
        - devices
      type: object
    Latency:
      properties:
        latencyMs:
          type: number
        preferred:
          type: boolean
      required:
        - latencyMs
        - preferred
      type: object
    NameServers:
      properties:
        dns:
          items:
            type: string
          type: array
        magicDNS:
          type: boolean
      required:
        - dns
        - magicDNS
      type: object
    NameServersPreference:
      properties:
        magicDNS:
          type: boolean
      required:
        - magicDNS
      type: object
    NodeAttrs:
      properties:
        attr:
          items:
            type: string
          type: array
        target:
          items:
            type: string
          type: array
      required:
        - target
        - attr
      type: object
    SetAuthorized:
      properties:
        authorized:
          type: boolean
      required:
        - authorized
      type: object
    SetDeviceRoutes:
      properties:
        routes:
          items:
            type: string
          type: array
      required:
        - routes
      type: object
    SetKeyExpiry:
      properties:
        keyExpiryDisabled:
          type: boolean
      required:
        - keyExpiryDisabled
      type: object
    SetTags:
      properties:
        tags:
          items:
            type: string
          type: array
      required:
        - tags
      type: object
    SshRule:
      properties:
        action:
          $ref: '#/components/schemas/SshRuleAction'
        checkPeriod:
          type: string
        dst:
          items:
            type: string
          type: array
        src:
          items:
            type: string
          type: array
        users:
          items:
            type: string
          type: array
      required:
        - action
        - src
        - dst
        - users
        - checkPeriod
      type: object
    SshRuleAction:
      enum:
        - check
        - accept
      type: string
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
    OAuth2Auth:
      flows:
        clientCredentials:
          scopes:
            acl: ""
            acl:read: ""
            all: ""
            all:read: ""
            devices: ""
            devices:read: ""
            dns: ""
            dns:read: ""
            routes: ""
            routes:read: ""
          tokenUrl: https://api.tailscale.com/api/v2/oauth/token
      type: oauth2
info:
  description: This namespace contains operations that can be performed on a Tailscale-connected device.
  title: Tailscale API
  version: "2023-01-01T00:00:00Z"
paths:
  /device/{id}:
    delete:
      operationId: DeviceEndpoints_deleteDevice
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The request has succeeded.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An unexpected error response.
    get:
      operationId: DeviceEndpoints_getDevice
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: The request has succeeded.
  /device/{id}/authorized:
    post:
      operationId: DeviceEndpoints_authorizeDevice
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAuthorized'
        required: true
      responses:
        "200":
          description: The request has succeeded.
  /device/{id}/key:
    post:
      operationId: DeviceEndpoints_setKeyExpiry
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetKeyExpiry'
        required: true
      responses:
        "200":
          description: The request has succeeded.
  /device/{id}/routes:
    get:
      operationId: DeviceEndpoints_getRoutes
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRoutes'
          description: The request has succeeded.
    post:
      operationId: DeviceEndpoints_setRoutes
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDeviceRoutes'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRoutes'
          description: The request has succeeded.
  /device/{id}/tags:
    post:
      operationId: DeviceEndpoints_setTags
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetTags'
        required: true
      responses:
        "200":
          description: The request has succeeded.
  /tailnet/{tailnet}/acl:
    get:
      operationId: TailnetEndpoints_getAcl
      parameters:
        - $ref: '#/components/parameters/TailnetEndpoints.CommonParameters'
        - in: header
          name: accept
          required: true
          schema:
            enum:
              - application/json
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Acl'
          description: The request has succeeded.
    post:
      operationId: TailnetEndpoints_createAcl
      parameters:
        - $ref: '#/components/parameters/TailnetEndpoints.CommonParameters'
        - in: header
          name: accept
          required: true
          schema:
            enum:
              - application/json
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Acl'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Acl'
          description: The request has succeeded.
  /tailnet/{tailnet}/devices:
    get:
      operationId: TailnetEndpoints_listDevices
      parameters:
        - $ref: '#/components/parameters/TailnetEndpoints.CommonParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  devices:
                    items:
                      $ref: '#/components/schemas/Device'
                    type: array
                required:
                  - devices
                type: object
          description: The request has succeeded.
  /tailnet/{tailnet}/dns/nameservers:
    get:
      operationId: TailnetEndpoints_getNameServers
      parameters:
        - $ref: '#/components/parameters/TailnetEndpoints.CommonParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameServers'
          description: The request has succeeded.
    post:
      description: Replaces the list of DNS nameservers for a tailnet.
      operationId: TailnetEndpoints_setNameServers
      parameters:
        - $ref: '#/components/parameters/TailnetEndpoints.CommonParameters'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameServers'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameServers'
          description: The request has succeeded.
  /tailnet/{tailnet}/dns/preferences:
    get:
      operationId: TailnetEndpoints_getDNSPreferences
      parameters:
        - $ref: '#/components/parameters/TailnetEndpoints.CommonParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameServersPreference'
          description: The request has succeeded.
    post:
      description: Replaces the DNS preferences for a tailnet.
      operationId: TailnetEndpoints_setDNSPreferences
      parameters:
        - $ref: '#/components/parameters/TailnetEndpoints.CommonParameters'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameServersPreference'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameServersPreference'
          description: The request has succeeded.
  /tailnet/{tailnet}/dns/searchpaths:
    get:
      operationId: TailnetEndpoints_listSearchPaths
      parameters:
        - $ref: '#/components/parameters/TailnetEndpoints.CommonParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsSearchPaths'
          description: The request has succeeded.
    post:
      operationId: TailnetEndpoints_replaceSearchPaths
      parameters:
        - $ref: '#/components/parameters/TailnetEndpoints.CommonParameters'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsSearchPaths'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsSearchPaths'
          description: The request has succeeded.
  /tailnet/{tailnet}/keys:
    get:
      operationId: TailnetEndpoints_listKeys
      parameters:
        - $ref: '#/components/parameters/TailnetEndpoints.CommonParameters'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthKey'
                type: array
          description: The request has succeeded.
    post:
      operationId: TailnetEndpoints_createKey
      parameters:
        - $ref: '#/components/parameters/TailnetEndpoints.CommonParameters'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthKeyCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthKey'
          description: The request has succeeded.
  /tailnet/{tailnet}/keys/{id}:
    delete:
      operationId: TailnetEndpoints_deleteKey
      parameters:
        - $ref: '#/components/parameters/TailnetEndpoints.CommonParameters'
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The request has succeeded.
    get:
      operationId: TailnetEndpoints_getKey
      parameters:
        - $ref: '#/components/parameters/TailnetEndpoints.CommonParameters'
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthKey'
          description: The request has succeeded.
security:
  - BasicAuth: []
  - OAuth2Auth:
      - all
      - all:read
      - acl
      - acl:read
      - devices
      - devices:read
      - dns
      - dns:read
      - routes
      - routes:read
servers:
  - description: Tailscale API
    url: https://api.tailscale.com/api/v2
